version: '3.8'

services:
  app:
    build:
      context: .  # Build from the Dockerfile in the current directory
      dockerfile: Dockerfile  # Specify the Dockerfile if named differently
    container_name: laravel_app
    volumes:
      - ./:/var/www/html
      - ./laravel.conf:/etc/apache2/sites-available/000-default.conf
    ports:
      - "8090:80"
    working_dir: /var/www/html
    environment:
      - APACHE_DOCUMENT_ROOT=/
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306  # Use the default MySQL port
      - DB_DATABASE=laravel
      - DB_USERNAME=user
      - DB_PASSWORD=password
    depends_on:
      db:
        condition: service_healthy  # Ensure db service is healthy before starting app
    networks:
      - laravel-network
    healthcheck:  # Health check for the app service
      test: ["CMD", "curl", "-f", "http://localhost/"]  # Replace with your application's health check URL
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: mysql:5.7  # Use specific version of MySQL
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: laravel
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3308:3306"
    networks:
      - laravel-network
    healthcheck:  # Health check for the MySQL service
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "user", "-ppassword"]
      interval: 30s
      timeout: 10s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db  # Host of the MySQL service
      MYSQL_ROOT_PASSWORD: secret  # Root password of the MySQL service
    ports:
      - "8081:80"  # Expose phpMyAdmin on port 8081
    depends_on:
      db:
        condition: service_healthy  # Ensure db service is healthy before starting phpMyAdmin
    networks:
      - laravel-network

volumes:
  dbdata:

networks:
  laravel-network:
    driver: bridge
